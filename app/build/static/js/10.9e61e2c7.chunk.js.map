{"version":3,"file":"static/js/10.9e61e2c7.chunk.js","mappings":"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","sources":["components/FeaturedProducts.jsx","components/SkeletonsComponents/ProductBaseSkeleton.jsx","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React, { useEffect, useState, lazy, Suspense, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { publicRequest } from \"../requestMethod\";\r\nimport ProductBaseSkeleton from \"./SkeletonsComponents/ProductBaseSkeleton\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px 50px;\r\n  background-color: #f8f8f8;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  letter-spacing: 0.15em;\r\n  font-size: 2em;\r\n  margin: 50px 0 10px 30px;\r\n  font-weight: 700;\r\n  background-color: #ff3e6c;\r\n  padding: 10px;\r\n  max-width: fit-content;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst ProductsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  justify-items: center;\r\n`;\r\n\r\nconst ProductBase = lazy(() => import(\"./ProductBase\"));\r\n\r\nconst FeaturedProducts = () => {\r\n  const [featuredProducts, setFeaturedProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getFeaturedProducts = async () => {\r\n      try {\r\n        const response = await publicRequest(\"/products/top\");\r\n        setFeaturedProducts(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(`FeaturedProducts ${err}`);\r\n      }\r\n    };\r\n\r\n    getFeaturedProducts();\r\n  }, []);\r\n\r\n  // Memoize the featuredProducts state to prevent unnecessary re-renders\r\n  const memoizedFeaturedProducts = useMemo(() => featuredProducts, [featuredProducts]);\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Top Products</Title>\r\n      <ProductsContainer>\r\n        {loading ? (\r\n          <>\r\n            <ProductBaseSkeleton />\r\n            <ProductBaseSkeleton />\r\n            <ProductBaseSkeleton />\r\n            <ProductBaseSkeleton />\r\n            <ProductBaseSkeleton />\r\n          </>\r\n        ) : (\r\n          <Suspense fallback={<ProductBaseSkeleton />}>\r\n            {!loading &&\r\n              memoizedFeaturedProducts.map((data) => (\r\n                data._id && <ProductBase key={data._id} data={data._id} />\r\n              ))}\r\n          </Suspense>\r\n        )}\r\n\r\n      </ProductsContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FeaturedProducts;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport styled from \"styled-components\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\n\r\nconst Container = styled.div`\r\n  width: 220px;\r\n  text-align: left;\r\n  position: relative;\r\n  vertical-align: top;\r\n  overflow: hidden;\r\n  display: inline-block;\r\n\r\n  margin: 0 10px 30px;\r\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);\r\n  padding: 5px;\r\n`;\r\nconst ProductBaseSkeleton = () => {\r\n  return (\r\n    <Container>\r\n      <Skeleton height={260} />\r\n      <Skeleton count={0.5} />\r\n      <Skeleton count={1} />\r\n      <Skeleton count={0.2} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductBaseSkeleton;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h4","_templateObject2","ProductsContainer","_templateObject3","ProductBase","lazy","_useState","useState","_useState2","_slicedToArray","featuredProducts","setFeaturedProducts","_useState3","_useState4","loading","setLoading","useEffect","getFeaturedProducts","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","publicRequest","sent","data","t0","console","log","concat","stop","apply","arguments","memoizedFeaturedProducts","useMemo","_jsxs","children","_jsx","_Fragment","ProductBaseSkeleton","Suspense","fallback","map","_id","Skeleton","height","count","_excluded","SkeletonThemeContext","React","defaultEnableAnimation","_ref2","_a","_b","_c","_ref2$count","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","_ref2$circle","circle","styleProp","style","originalPropsStyleOptions","_objectWithoutProperties","contextStyleOptions","propsStyleOptions","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","key","styleOptions","baseColor","highlightColor","width","borderRadius","direction","duration","_ref$enableAnimation","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}