{"version":3,"file":"static/js/132.f603271c.chunk.js","mappings":"iTAWMA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qIAQtBC,EAAUJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mKAUpBG,EAAON,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+PAYjBK,EAAQR,EAAAA,GAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sJASlBO,GAAaV,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,CAAYY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,4BAIzBU,GAAoBb,EAAAA,EAAAA,IAAOW,EAAAA,EAAKG,QAAZd,CAAoBe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4VAaxCa,GAAehB,EAAAA,EAAAA,IAAOiB,EAAAA,EAAPjB,CAAckB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,+OAY7BgB,EAAYnB,EAAAA,GAAOoB,EAACC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,8OAcpBmB,EAAatB,EAAAA,GAAOC,IAAGsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,wFAGzBU,GAIEW,EAAmBxB,EAAAA,GAAOyB,KAAIC,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,sKAQ9BwB,EAAsB3B,EAAAA,GAAOoB,EAACQ,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,6BA2HpC,UAxHuB,WACrB,IAAA0B,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GACdE,GAD0BF,EAAA,IAC4BV,EAAAA,EAAAA,WAAS,IAAMa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA9DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,GAAoDhB,EAAAA,EAAAA,WAAS,GAAMiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA5DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,GAAoCpB,EAAAA,EAAAA,WAAS,GAAMqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAgDxB,EAAAA,EAAAA,UAAS,IAAGyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAEtCG,EAAyB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAA7BvB,GAAuB,GAAMqB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETC,EAAAA,GAAcC,KAAK,iBAAkB,CACrDrC,MAAOA,IACN,KAAD,EAFI+B,EAAGE,EAAAK,KAGTC,QAAQC,IAAIT,GACZf,EAAsBe,EAAIU,MACP,MAAfV,EAAIW,QACNtB,GAAc,GACfa,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEDM,QAAQC,IAAGP,EAAAU,IACX3B,EAAsBiB,EAAAU,GAAMC,SAASH,KAAKI,OAAO,QAEnDjC,GAAuB,GAAO,yBAAAqB,EAAAa,OAAA,GAAAhB,EAAA,mBAC/B,kBAhB8B,OAAAJ,EAAAqB,MAAA,KAAAC,UAAA,KAkBzBC,EAAW,eAAAC,GAAAvB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsB,EAAOC,GAAC,IAAArB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACP,OAAnBiB,EAAEE,iBAAiBD,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAECC,EAAAA,GAAcC,KAAK,uBAAwB,CAC3DrC,MAAOA,EACPI,SAAUA,EACVmB,iBAAkBA,IACjB,KAAD,EAJO,OAAHQ,EAAGsB,EAAAf,KAAAe,EAAAlB,KAAA,EAKHoB,IAAAA,KAAU,CACdC,KAAM,UACNC,MAAO,mBACPC,KAAM3B,EAAIU,KAAKkB,UACd,KAAD,EACFC,IAAeP,EAAAlB,KAAA,iBAAAkB,EAAAnB,KAAA,GAAAmB,EAAAV,GAAAU,EAAA,SAEfd,QAAQC,IAAGa,EAAAV,IACXY,IAAAA,KAAU,CACRC,KAAM,UACNC,MAAO,eACPC,KAAML,EAAAV,GAAMC,SAASH,KAAKI,QACzB,yBAAAQ,EAAAP,OAAA,GAAAK,EAAA,mBAEN,gBAtBgBU,GAAA,OAAAX,EAAAH,MAAA,KAAAC,UAAA,KAuBXc,GAAWC,EAAAA,EAAAA,MACXH,EAAe,WACnBE,EAAS,QAAS,CAAEE,SAAS,GAC/B,EACA,OACEC,EAAAA,EAAAA,MAACnG,EAAS,CAAAoG,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,QAAe,KAChBH,EAAAA,EAAAA,MAAC9F,EAAO,CAAA+F,SAAA,EACND,EAAAA,EAAAA,MAAC5F,EAAI,CAAA6F,SAAA,EACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAACE,EAAAA,IAAiB,CAACC,SAAU,UAE/BH,EAAAA,EAAAA,KAAC5F,EAAK,CAAA2F,UACJD,EAAAA,EAAAA,MAACxF,EAAU,CAAC8F,SAAUtB,EAAYiB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEF,SAAU,OAAQG,WAAY,MAAOC,MAAO,QAASR,SAAC,2BAGnED,EAAAA,EAAAA,MAAC5E,EAAU,CAAA6E,SAAA,EACTC,EAAAA,EAAAA,KAACvF,EAAiB,CAChB+F,KAAK,OACLC,YAAY,QACZC,GAAG,QACHC,KAAK,QACLC,SAAU,SAAC3B,GAAC,OAAKnD,EAASmD,EAAE4B,OAAOC,MAAM,KAEzC9D,IACAgD,EAAAA,EAAAA,KAAC5E,EAAgB,CACf2F,QAASzD,EACT0D,uBAAwBxE,EAAoBuD,SAE3CvD,GAAsBwD,EAAAA,EAAAA,KAACiB,EAAAA,QAAW,CAACC,KAAM,KAAS,gBAIzDlB,EAAAA,EAAAA,KAACzE,EAAmB,CAAAwE,SAAEnD,IACrBI,IACCgD,EAAAA,EAAAA,KAACvF,EAAiB,CAChB+F,KAAK,SACLW,UAAU,UACVC,UAAU,IACVX,YAAY,0BACZnB,MAAM,oBACNsB,SAAU,SAAC3B,GAAC,OAAK5B,EAAoB4B,EAAE4B,OAAOC,MAAM,KAGxDd,EAAAA,EAAAA,KAACvF,EAAiB,CAChB+F,KAAK,WACLC,YAAY,WACZY,KAAK,wBACLT,SAAU,SAAC3B,GAAC,OAAK/C,EAAY+C,EAAE4B,OAAOC,MAAM,EAC5CJ,GAAG,WACHC,KAAK,cAGPX,EAAAA,EAAAA,KAAA,OAAKsB,UAAU,iCAAgCvB,UAC7CC,EAAAA,EAAAA,KAACpF,EAAY,CAAC2G,QAAQ,OAAOf,KAAK,SAAQT,SACvC1D,GAAU2D,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,IAAM,cAGhC1B,EAAAA,EAAAA,MAAC/E,EAAS,CAAAgF,SAAA,CAAC,kCACuB,KAChCC,EAAAA,EAAAA,KAAA,QAAMe,QAAStB,EAAaM,SAAC,uBAO3C,C","sources":["pages/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { BsQuestionDiamond } from \"react-icons/bs\";\r\nimport LoadingBar from \"../components/Loadings/LoadingBar\";\r\nimport HeaderComponent from \"../components/HeaderComponent\";\r\nimport { publicRequest } from \"../requestMethod\";\r\nimport LoadingClip from \"../components/Loadings/LoadingClip\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: auto;\r\n  overflow: hidden;\r\n  height: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 960px;\r\n  height: 600px;\r\n  border-radius: 10px;\r\n  margin-top: 150px;\r\n  background-color: #f7f7f7;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  flex: 2;\r\n  border-radius: 10px 0px 0px 10px;\r\n  background-color: #ff3f6c; /* Updated to primaryColor */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: medium;\r\n`;\r\n\r\nconst Right = styled.div`\r\n  flex: 3;\r\n  border-radius: 0px 10px 10px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 30px;\r\n`;\r\n\r\nconst CustomForm = styled(Form)`\r\n  padding: 30px;\r\n`;\r\n\r\nconst StyledFormControl = styled(Form.Control)`\r\n  margin-top: 20px;\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  transition: border-color 0.3s;\r\n  &:focus {\r\n    border-color: #ff3f6c; /* Updated to primaryColor on focus */\r\n    box-shadow: 0 0 0 0.2rem rgba(255, 63, 108, 0.25); /* Updated to primaryColor shadow on focus */\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  background-color: #ff3f6c; /* Updated to primaryColor */\r\n  border: none;\r\n  margin-top: 20px;\r\n  width: 100px;\r\n  height: 40px;\r\n\r\n  &:hover {\r\n    background-color: #ff2e5a; /* Slightly darker shade for hover effect */\r\n  }\r\n`;\r\n\r\nconst LoginLink = styled.p`\r\n  margin-top: 20px;\r\n  text-align: left;\r\n  font-weight: 500;\r\n  color: #555;\r\n  & > span {\r\n    color: #ff3f6c; /* Updated to primaryColor */\r\n    cursor: pointer;\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst EmailInput = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  ${StyledFormControl} {\r\n    padding-right: 80px;\r\n  }\r\n`;\r\nconst VerificationSpan = styled.span`\r\n  color: #ff0a33;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%; /* Vertically center the link */\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n`;\r\nconst VerificationMessage = styled.p`\r\n  color: #0ca9f1;\r\n`;\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [verificationLoading, setVerificationLoading] = useState(false);\r\n  const [verificationStatus, setVerificationStatus] = useState(false);\r\n  const [isCodeSent, setIsCodeSent] = useState(false);\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n\r\n  const handleGetVerificationCode = async () => {\r\n    setVerificationLoading(true);\r\n    try {\r\n      const res = await publicRequest.post(\"/user/send-otp\", {\r\n        email: email,\r\n      });\r\n      console.log(res);\r\n      setVerificationStatus(res.data);\r\n      if (res.status === 200) {\r\n        setIsCodeSent(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setVerificationStatus(error.response.data.error);\r\n    }\r\n    setVerificationLoading(false);\r\n  };\r\n\r\n  const handleReset = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await publicRequest.post(\"/user/reset-password\", {\r\n        email: email,\r\n        password: password,\r\n        verificationCode: verificationCode,\r\n      });\r\n      await Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Reset Successful\",\r\n        text: res.data.message,\r\n      });\r\n      handleToggle();\r\n    } catch (error) {\r\n      console.log(error);\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Reset Failed\",\r\n        text: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n  const navigate = useNavigate();\r\n  const handleToggle = () => {\r\n    navigate(\"/auth\", { replace: true });\r\n  };\r\n  return (\r\n    <Container>\r\n      <HeaderComponent />\r\n      <Wrapper>\r\n        <Left>\r\n          <h1>Forgot Password?</h1>\r\n          <BsQuestionDiamond fontSize={100} />\r\n        </Left>\r\n        <Right>\r\n          <CustomForm onSubmit={handleReset}>\r\n            <h2 style={{ fontSize: \"28px\", fontWeight: \"700\", color: \"#333\" }}>\r\n              Forgot Your Password?\r\n            </h2>\r\n            <EmailInput>\r\n              <StyledFormControl\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {!isCodeSent && (\r\n                <VerificationSpan\r\n                  onClick={handleGetVerificationCode}\r\n                  isVerificationCodeSent={verificationLoading}\r\n                >\r\n                  {verificationLoading ? <LoadingClip size={15} /> : \"Get OTP\"}\r\n                </VerificationSpan>\r\n              )}\r\n            </EmailInput>\r\n            <VerificationMessage>{verificationStatus}</VerificationMessage>\r\n            {isCodeSent && (\r\n              <StyledFormControl\r\n                type=\"number\"\r\n                inputMode=\"numeric\"\r\n                maxLength=\"6\"\r\n                placeholder=\"Enter Verification Code\"\r\n                title=\"Verification Code\"\r\n                onChange={(e) => setVerificationCode(e.target.value)}\r\n              />\r\n            )}\r\n            <StyledFormControl\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              hint=\"At least 8 characters\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              id=\"password\"\r\n              name=\"password\"\r\n            />\r\n\r\n            <div className=\"d-flex justify-content-between\">\r\n              <SubmitButton variant=\"dark\" type=\"submit\">\r\n                {loading ? <LoadingBar /> : \"Change\"}\r\n              </SubmitButton>\r\n            </div>\r\n            <LoginLink>\r\n              Did You Remember Your Password?{\" \"}\r\n              <span onClick={handleToggle}>Login</span>\r\n            </LoginLink>\r\n          </CustomForm>\r\n        </Right>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Left","_templateObject3","Right","_templateObject4","CustomForm","Form","_templateObject5","StyledFormControl","Control","_templateObject6","SubmitButton","Button","_templateObject7","LoginLink","p","_templateObject8","EmailInput","_templateObject9","VerificationSpan","span","_templateObject10","VerificationMessage","_templateObject11","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","_useState7","_useState8","verificationLoading","setVerificationLoading","_useState9","_useState10","verificationStatus","setVerificationStatus","_useState11","_useState12","isCodeSent","setIsCodeSent","_useState13","_useState14","verificationCode","setVerificationCode","handleGetVerificationCode","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","publicRequest","post","sent","console","log","data","status","t0","response","error","stop","apply","arguments","handleReset","_ref2","_callee2","e","_context2","preventDefault","Swal","icon","title","text","message","handleToggle","_x","navigate","useNavigate","replace","_jsxs","children","_jsx","HeaderComponent","BsQuestionDiamond","fontSize","onSubmit","style","fontWeight","color","type","placeholder","id","name","onChange","target","value","onClick","isVerificationCodeSent","LoadingClip","size","inputMode","maxLength","hint","className","variant","LoadingBar"],"sourceRoot":""}