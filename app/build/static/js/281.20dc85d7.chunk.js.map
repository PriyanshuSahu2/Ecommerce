{"version":3,"file":"static/js/281.20dc85d7.chunk.js","mappings":"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","sources":["components/SkeletonsComponents/ProductPageSkeleton.jsx","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport styled from \"styled-components\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Right = styled.div`\r\n  /* Set a width to maintain space within flex container */\r\n  width: 100%;\r\n  margin-left: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Horizontal = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  .react-loading-skeleton {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\nconst ProductPageSkeleton = () => {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Left>\r\n          <Wrapper>\r\n            <Left>\r\n              {\" \"}\r\n              <Skeleton height={400} />\r\n            </Left>\r\n            <Right>\r\n              {\" \"}\r\n              <Skeleton height={400} />\r\n            </Right>\r\n          </Wrapper>\r\n          <Wrapper>\r\n            <Left>\r\n              {\" \"}\r\n              <Skeleton height={400} />\r\n            </Left>\r\n            <Right>\r\n              {\" \"}\r\n              <Skeleton height={400} />\r\n            </Right>\r\n          </Wrapper>\r\n        </Left>\r\n        <Right>\r\n          <Skeleton height={30} width={200} />\r\n          <Skeleton height={30} width={400} />\r\n          <br />\r\n          <Skeleton height={30} width={100} />\r\n          <Skeleton height={15} width={200} />\r\n          <br />\r\n          <Skeleton height={30} width={100} />\r\n          <div style={{ marginTop: \"10px\" }}></div>\r\n          <Horizontal>\r\n            <Skeleton circle height={60} width={60} />\r\n            <Skeleton circle height={60} width={60} />\r\n            <Skeleton circle height={60} width={60} />\r\n            <Skeleton circle height={60} width={60} />\r\n          </Horizontal>\r\n          <br />\r\n          <Skeleton height={50} />\r\n          <hr />\r\n          <Skeleton count={5} height={30} />\r\n        </Right>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductPageSkeleton;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Left","_templateObject2","Right","_templateObject3","Horizontal","_templateObject4","_jsx","Container","children","_jsxs","Skeleton","height","width","style","marginTop","circle","count","_excluded","SkeletonThemeContext","React","defaultEnableAnimation","_ref2","_a","_b","_c","_ref2$count","wrapper","customClassName","className","containerClassName","containerTestId","_ref2$circle","styleProp","originalPropsStyleOptions","_objectWithoutProperties","contextStyleOptions","propsStyleOptions","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","key","styleOptions","_ref","baseColor","highlightColor","borderRadius","direction","duration","_ref$enableAnimation","enableAnimation","concat","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el"],"sourceRoot":""}